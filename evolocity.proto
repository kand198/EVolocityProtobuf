syntax = "proto3";
// Compile for TS in the top level with:
// protoc --plugin=protoc-gen-ts_proto=.\node_modules\.bin\protoc-gen-ts_proto.cmd --ts_proto_out=./lib/. ./proto/evolocity.proto
import "proto/nanopb-win/generator/proto/nanopb.proto"; // TypeScript import
// import "nanopb.proto" // C import

/**
 * Requests
 */
message Request {
    uint32 timestamp = 1;
    uint32 uid = 2;
    oneof payload {
        ResetRequest reset = 3;
        ConfigRequest config = 4;
        EnergyRequest energy = 5;
        TimeRequest time = 6;
        StatusRequest status = 7;
    }
}

message ResetRequest {
}

message ConfigRequest {
    optional ConfigContent content = 1;
}

message TimestampPair {
    uint32 start_timestamp = 1;
    uint32 end_timestamp = 2;
}

message EnergyRequest {
    optional TimestampPair timestamp_pair = 1;
}

message TimeRequest {
    optional uint32 time = 1;
}

message StatusRequest {
}

/**
 * Responses
 */
message Response {
    uint32 timestamp = 1;
    uint32 uid = 2;
    oneof payload {
        Ack ack = 3;
        ConfigResponse config = 4;
        EnergyResponse energy = 5;
        TimeResponse time = 6;
        StatusResponse status = 7;
    }
}

message Ack {
}

message ConfigResponse {
    ConfigContent content = 1;
}

message EnergyFrame {
    uint32 end_timestamp = 1;
    int32 average_voltage = 2;
    int32 average_current = 3;
    uint32 total_energy = 4;
}
 
message EnergyResponse {
    repeated EnergyFrame frames = 1 [(nanopb).max_count = 16];
}

message TimeResponse {
}

message StatusResponse {
    uint32 uptime = 1;
    uint32 flash_usage = 2;
    int32 temperature = 3;
    uint32 voltage = 4;
    uint32 current = 5;
}

/**
* Content
*/
enum VehicleClass {
    STANDARD = 0;
    OPEN = 1;
    COMPETITION = 2;
}

message ConfigContent {
    uint32 serial_number = 1;
    uint32 team_number = 2;
    optional VehicleClass vehicle_class = 3;
}
